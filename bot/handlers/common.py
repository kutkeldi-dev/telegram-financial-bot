from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from bot.keyboards.inline import get_main_menu_keyboard, get_main_reply_keyboard

router = Router()

@router.message(Command("start"))
async def start_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = (
        "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –§–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –ë–æ—Ç–∞!</b>\n\n"
        "üîê –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code>/auth –í–ê–®_–ö–û–î</code>\n\n"
        "üìû –ó–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∫–æ–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )
    
    await message.answer(welcome_text, parse_mode="HTML")

@router.callback_query(F.data == "main_menu")
async def main_menu_callback(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    menu_text = (
        "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    await callback.message.edit_text(
        menu_text,
        parse_mode="HTML",
        reply_markup=get_main_menu_keyboard()
    )
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ (–∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
@router.message(F.text == "üìä –°—Ç–∞—Ç—É—Å")
async def status_text_handler(message: Message, current_user):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –°—Ç–∞—Ç—É—Å"""
    from bot.handlers.status import show_status_data
    await show_status_data(message, current_user)

@router.message(F.text == "üí∞ –†–∞—Å—Ö–æ–¥")
async def expense_text_handler(message: Message, current_user, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –†–∞—Å—Ö–æ–¥"""
    from bot.handlers.expenses import start_expense_input
    
    class FakeCallbackQuery:
        def __init__(self, message):
            self.message = message
            self.data = "expense"
        async def answer(self):
            pass
    
    fake_callback = FakeCallbackQuery(message)
    await start_expense_input(fake_callback, state, current_user)

@router.message(F.text == "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
async def analytics_text_handler(message: Message, current_user):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"""
    from bot.keyboards.inline import get_analytics_keyboard
    from services.analytics import analytics_service
    
    keyboard = get_analytics_keyboard()
    summary = await analytics_service.get_analytics_summary()
    text = f"{summary}\n\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:"
    
    await message.answer(text, parse_mode="HTML", reply_markup=keyboard)


@router.message(F.text == "üìñ –ü–æ–º–æ—â—å")
async def help_text_handler(message: Message, current_user):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –ü–æ–º–æ—â—å"""
    help_text = (
        f"üë§ <b>{current_user.full_name}</b>\n"
        f"üìñ <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
        
        f"üîπ <b>üìä –°—Ç–∞—Ç—É—Å</b> - –ø–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å\n"
        f"üîπ <b>üí∞ –†–∞—Å—Ö–æ–¥</b> - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥\n"
        f"üîπ <b>üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</b> - –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –æ—Ç—á–µ—Ç—ã\n"
        
        f"üí° <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        f"‚Ä¢ <code>/start</code> - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        f"‚Ä¢ <code>/auth –ö–û–î</code> - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è\n"
        f"‚Ä¢ <code>/analytics</code> - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n"
        f"‚Ä¢ <code>/sync</code> - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è\n\n"
        
        f"‚ùì –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )
    
    await message.answer(help_text, parse_mode="HTML", reply_markup=get_main_reply_keyboard())

@router.message()
async def show_main_menu(message: Message, current_user):
    """–ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    menu_text = (
        f"üë§ <b>{current_user.full_name}</b>\n"
        f"üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º:"
    )
    
    await message.answer(
        menu_text,
        parse_mode="HTML",
        reply_markup=get_main_reply_keyboard()
    )