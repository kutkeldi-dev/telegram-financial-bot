from aiogram import Router, F
from aiogram.types import CallbackQuery
from services.google_sheets import google_sheets_service
from bot.keyboards.inline import get_main_menu_keyboard
import logging

logger = logging.getLogger(__name__)
router = Router()

async def show_status_data(message_or_callback, current_user):
    """–û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞"""
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Sheets
        status_data = await google_sheets_service.get_status_data()
        
        if not status_data:
            error_text = (
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å–∞.\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets."
            )
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
            if hasattr(message_or_callback, 'answer') and hasattr(message_or_callback, 'message'):
                # –≠—Ç–æ CallbackQuery
                await message_or_callback.message.edit_text(error_text, reply_markup=get_main_menu_keyboard())
                await message_or_callback.answer()
            else:
                # –≠—Ç–æ Message
                from bot.keyboards.inline import get_main_reply_keyboard
                await message_or_callback.answer(error_text, reply_markup=get_main_reply_keyboard())
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0
        total_turnover = status_data.get('–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç', 0)
        product_costs = status_data.get('–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ç–æ–≤–∞—Ä', 0)  
        personal_expenses = status_data.get('–õ–∏—á–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã', 0)
        business_investment = status_data.get('–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –±–∏–∑–Ω–µ—Å', 0)
        shop1_account = status_data.get('–°—á–µ—Ç ISKO.TOOLS', 0)
        shop2_account = status_data.get('–°—á–µ—Ç TANKER', 0)
        account_balance = status_data.get('–û—Å—Ç–∞—Ç–æ–∫ –≤ —Å—á–µ—Ç–µ', 0)
        
        # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–µ —Å—É–º–º—ã
        total_bank_deposits = shop1_account + shop2_account
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        status_text = (
            f"üìä <b>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å</b>\n"
            f"üë§ –ó–∞–ø—Ä–æ—Å–∏–ª: {current_user.full_name}\n\n"
            
            f"üí∞ <b>1. –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç:</b>\n"
            f"   {total_turnover:,.2f} —Å–æ–º\n\n"
            
            f"üì¶ <b>2. –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ç–æ–≤–∞—Ä:</b>\n" 
            f"   {product_costs:,.2f} —Å–æ–º\n\n"
            
            f"üë§ <b>3. –õ–∏—á–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã:</b>\n"
            f"   {personal_expenses:,.2f} —Å–æ–º\n\n"
            
            f"üè¶ <b>4. –ü–æ—Å—Ç—É–ø–∏–ª–æ –≤ –±–∞–Ω–∫:</b>\n"
            f"   ‚Ä¢ –°—á–µ—Ç ISKO.TOOLS: {shop1_account:,.2f} —Å–æ–º\n"
            f"   ‚Ä¢ –°—á–µ—Ç TANKER: {shop2_account:,.2f} —Å–æ–º\n\n"
            
            f"üí≥ <b>5. –û—Å—Ç–∞—Ç–æ–∫ –≤ —Å—á–µ—Ç–µ:</b>\n"
            f"   {account_balance:,.2f} —Å–æ–º\n\n"
            
            f"üìã <b>–û–±—â–∏–µ —Å—É–º–º—ã:</b>\n"
            f"‚Ä¢ –í—Å–µ–≥–æ –æ–±–æ—Ä–æ—Ç: {total_turnover:,.2f} —Å–æ–º\n"
            f"‚Ä¢ –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ç–æ–≤–∞—Ä: {product_costs:,.2f} —Å–æ–º\n"
            f"‚Ä¢ –ü–æ—Å—Ç—É–ø–∏–ª–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫: {total_bank_deposits:,.2f} —Å–æ–º\n\n"
            
            f"üïê <i>–î–∞–Ω–Ω—ã–µ –∏–∑ Google –¢–∞–±–ª–∏—Ü—ã</i>"
        )
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        if hasattr(message_or_callback, 'answer') and hasattr(message_or_callback, 'message'):
            # –≠—Ç–æ CallbackQuery
            keyboard = get_main_menu_keyboard()
            try:
                await message_or_callback.message.edit_text(
                    status_text,
                    parse_mode="HTML",
                    reply_markup=keyboard
                )
            except Exception:
                # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message_or_callback.message.answer(
                    status_text,
                    parse_mode="HTML",
                    reply_markup=keyboard
                )
            await message_or_callback.answer()
        else:
            # –≠—Ç–æ Message
            from bot.keyboards.inline import get_main_reply_keyboard
            keyboard = get_main_reply_keyboard()
            await message_or_callback.answer(
                status_text,
                parse_mode="HTML",
                reply_markup=keyboard
            )
        
        logger.info("Status data requested successfully")
        
    except Exception as e:
        logger.error(f"Error getting status: {e}")
        error_text = (
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        if hasattr(message_or_callback, 'answer') and hasattr(message_or_callback, 'message'):
            # –≠—Ç–æ CallbackQuery
            await message_or_callback.message.edit_text(error_text, reply_markup=get_main_menu_keyboard())
            await message_or_callback.answer()
        else:
            # –≠—Ç–æ Message
            from bot.keyboards.inline import get_main_reply_keyboard
            await message_or_callback.answer(error_text, reply_markup=get_main_reply_keyboard())

@router.callback_query(F.data == "status")
async def show_status(callback: CallbackQuery, current_user):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç—É—Å–∞"""
    await show_status_data(callback, current_user)